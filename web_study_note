1.Object.assignde 使用：（浅拷贝）
  https://www.jianshu.com/p/f9ec860ecd81
  Object.assign可以用来处理数组，但是会把数组视为对象。key是索引值，value是数组值
  Object.assign([1, 2, 3], [4, 5])
  // [4, 5, 3]

  上面代码中，Object.assign把数组视为属性名为 0、1、2 的对象，因此源数组的 0 号属性4覆盖了目标数组的 0 号属性1。
2.深拷贝与浅拷贝
  浅拷贝：因为浅复制只会将对象的各个属性进行依次复制，并不会进行递归复制，而 JavaScript 存储对象都是存地址的，所以浅复制会导致 obj.arr 和 shallowObj.arr 指向同一块内存地址
  深拷贝：它不仅将原对象的各个属性逐个复制出去，而且将原对象各个属性所包含的对象也依次采用深复制的方法递归复制到新对象上。
  赋值符号与拷贝的区别：在对象是引用类型（a=b）时赋值会将b的内存地址赋值给a，a改变值时，b也会改变。浅拷贝会将b第一层的内存地址与值传给a，a就算改变值，b的第一层也不会改变，但是改变a的更深层的值时，b就会改变；深拷贝无论a怎么改变，都不会影响b的值。
3.import引用的会先执行，无论语句的顺序
4.appendChild() 方法向节点添加最后一个子节点。
5.路径问题：
  "./"：代表目前所在的目录。
  " . ./"代表上一层目录。
  "/"：代表根目录。电脑中即c，盘，项目中即项目所在的文件夹
  "@/" ：vue专用，指向src文件夹
6.hash值
  所有hash值都不会传给服务器
  hash的兼容性更好一点，history兼容性稍差。（上线后刷新会有问题，由后端解决）
7.nextTick
  this.$nextTick(回调函数)
  在下一次DOM更新结束后执行其指定的回调
  当改变数据后，要基于更新后 的新DOM进行某些操作时，要在nextTick所指定的回调函数中执行
8.JSON.stringify()的作用是将 JavaScript 对象转换为 JSON 字符串，而JSON.parse()可以将JSON字符串转为一个对象。
  JSON.parse()需要注意一点，由于此方法是将JSON字符串转换成对象，所以你的字符串必须符合JSON格式，即键值都必须使用双引号包裹
9.js对象属性 通过点(.) 和 方括号([]) 的不同之处
      点操作符: 静态的。右侧必须是一个以属性名称命名的简单标识符。属性名用一个标识符来表示。标识符必须直接出现再js程序中，
  它们不是数据类型，因此程序无法修改它们。
      中括号操作符: 动态的。方括号里必须是一个计算结果为字符串的表达式，属性名通过字符串表示。字符串是js的数据类型，
  再程序运行时可以修改和创建它们。
